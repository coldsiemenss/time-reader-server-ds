import discord
from discord import app_commands
from discord.ext import commands, tasks
import sqlite3
from datetime import datetime
import asyncio  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º asyncio

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ–Ω—Ç—ã
intents = discord.Intents.default()
intents.voice_states = True
intents.guilds = True
intents.messages = True

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = commands.Bot(command_prefix="!", intents=intents)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('voice_times.db')
c = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
c.execute('''CREATE TABLE IF NOT EXISTS voice_times (
             user_id INTEGER PRIMARY KEY,
             total_time INTEGER)''')
conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def log_user_time(user_id, time_spent):
    c.execute('SELECT total_time FROM voice_times WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    if result:
        total_time = result[0] + time_spent
        c.execute('UPDATE voice_times SET total_time = ? WHERE user_id = ?', (total_time, user_id))
    else:
        c.execute('INSERT INTO voice_times (user_id, total_time) VALUES (?, ?)', (user_id, time_spent))
    conn.commit()

user_voice_times = {}
user_tasks = {}

async def update_user_time(member_id):
    while True:
        await asyncio.sleep(5)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
        if member_id in user_voice_times:
            print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {member_id}")

@bot.event
async def on_voice_state_update(member, before, after):
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ö–æ–¥–∏—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
    if before.channel is None and after.channel is not None:
        user_voice_times[member.id] = datetime.now()
        print(f"{member.name} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É {after.channel.name}")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        if member.id not in user_tasks:
            user_tasks[member.id] = bot.loop.create_task(update_user_time(member.id))

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    elif before.channel is not None and after.channel is None:
        join_time = user_voice_times.pop(member.id, None)
        if join_time:
            time_spent = (datetime.now() - join_time).total_seconds()
            log_user_time(member.id, int(time_spent))
            print(f"{member.name} –ø—Ä–æ–≤–µ–ª –≤ –∫–∞–Ω–∞–ª–µ {before.channel.name} {time_spent // 60} –º–∏–Ω—É—Ç.")

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞—á—É
        if member.id in user_tasks:
            user_tasks[member.id].cancel()
            del user_tasks[member.id]

@bot.event
async def on_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
    if message.author == bot.user:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if isinstance(message.channel, discord.DMChannel):
        await message.channel.send("–ë—Ä–æ, —Ç—ã —á—É—Ç—å-—á—É—Ç—å –Ω–µ —Ç—É–¥–∞ –ø–∏—à–µ—à—å, –∏–¥–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª —Å–µ—Ä–≤–µ—Ä–∞.")
    else:
        await bot.process_commands(message)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª

@bot.tree.command(name="time", description="–£–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –ø—Ä–æ–≤–µ–ª–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
async def time_command(interaction: discord.Interaction, member: discord.Member = None):
    if isinstance(interaction.channel, discord.DMChannel):
        await interaction.response.send_message("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return

    if member is None:
        member = interaction.user

    c.execute('SELECT total_time FROM voice_times WHERE user_id = ?', (member.id,))
    result = c.fetchone()
    total_time = result[0] if result else 0

    if member.id in user_voice_times:
        total_time += int((datetime.now() - user_voice_times[member.id]).total_seconds())

    total_time_in_minutes = total_time // 60
    total_time_in_seconds = total_time % 60

    # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Embed
    embed = discord.Embed(title="‚è±Ô∏è –í—Ä–µ–º—è –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö", color=0x00ff00)
    embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
    embed.add_field(name="üïí –í—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:", value=f"{total_time_in_minutes} –º–∏–Ω—É—Ç –∏ {total_time_in_seconds} —Å–µ–∫—É–Ω–¥", inline=True)
    embed.set_thumbnail(url=member.avatar.url)  # –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç: {interaction.user.name}", icon_url=interaction.user.avatar.url)  # –ü–æ–¥–ø–∏—Å—å —Å –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–∞

    await interaction.response.send_message(embed=embed)

async def check_current_voice_channels():
    for guild in bot.guilds:
        for channel in guild.voice_channels:
            for member in channel.members:
                if member.id not in user_voice_times:
                    user_voice_times[member.id] = datetime.now()
                    print(f"{member.name} —É–∂–µ –Ω–∞—Ö–æ–¥–∏–ª—Å—è –≤ {channel.name}, –∑–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞—Ç–∞.")

                    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
                    if member.id not in user_tasks:
                        user_tasks[member.id] = bot.loop.create_task(update_user_time(member.id))

@bot.event
async def on_ready():
    await bot.tree.sync()
    await check_current_voice_channels()
    print(f'–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}')
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run('your token')
